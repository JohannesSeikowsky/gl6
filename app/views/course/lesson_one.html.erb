<h3 id="lesson_title"> Context & Getting Started </h3>
<p>
Structure <br> <br>
context
- many programming languages - names
- in themselves software, thus they differ in ways ...
- some suited for some purposes others for others
- can be thought of as toolboxes - give you bunch of functionalities

- way of telling computer what to do.

- process always - write program files,
then tell computer to execute.


setup
- to do that you need a computer with OS,
text editor to write into program files, and the program language
need to be installed -- alluding to the point that porgg languages are themselves
pieces of software
- language in itself is software that takes your program file (source code)
and converts in to machine lanuage
---
setup tedious --> thus we use web applicaiton --> repl.it
- simulates developmen environment.
Instructions:
go here.
sign up.
choose Python.
we are going to use this. and maybe eventually do local install,
but for now we want nothing in the way of starting some programming.


--- option to use vide from here on rather than text ... ---
-- basically an intro to id ---


- keep your account so we can keep on programming in it.
- from now on place to program.
- theres that interface where we can just program,
but in addition there are the teaching / learning functions.
-- in particular. share code. pair programming. and assignments - including submission.
--> from now on place for coding and place for practicing etc.

Repl.it also gives functionality of teaching/learning.
-- share your code // assignments // etc


Overall - Now were ready to write Python.


... do tmw ...






<!--
	As you probably know there are a bunch of programming lanugages around.
	You may have heared of C or C++, Ruby, Perl, Java or Javascript and so forth.
	And of course of Python. In actuality there are many, many more programming languages in existance.
	<br> <br>
	That is because programming languages are themselves pieces of software that
	programmers can create if they decide to do so. And apparently many have decided to create programming languages.
	In our case of Python - Python has been created by Guido von Rossum in 1990. It's name is a reference to Monty Python -
	specifically the lightheartedness of it.
	<br> <br>
	Programming languages then are the pieces of software that we use to create other pieces of software.
	<br> <br>
	This begs the question what programmers of programming languages use to programme those languages.
	This is an entire topic in itself and if you're interested ask me. In some sense however you don't really need
	to know this. I mean this in the same sense an architect for instance doesn't necessarily need to know a huge amount about the material science of the glass that makes up the windows which he or she uses in the construction.
	<br> <br>
	Point being, as a programmer you are a user of the programming language of your choice and as such your 1st pirority is
	to understand what you can do with your tool. Understanding a great deal about how your tool itself works certainly doesn' hurt, but is not absolutely necessary - unless of course you want to become a programmer of programming languages. Then that is very much your business.
	<br> <br>
	Programming languages can differ quiet a lot, but there is also a lot of overlap between
	those that are very common. For instance all the concepts we'll learn for Python exist in the same
	way in Ruby or Perl for example. Other languages, like Ruby or Perl, may use different symbols to invoke the same functioanlities but the concepts are the same. That is why, once you solidly know one programming language it's a lot easier to learn a second one.
	<br> <br>
	Why Python? 
	<br>
	The reason why I've chosen Python as the language to teach is because Python is used
	in almost all major fields of programming - data science and visualization, machine learning,
	robotics, security and so forth and so forth. Thus, independent what your interests are (or at some point will be).
	It is very unlikely that you will regret having learned Python. It's plainly the most intelligent language
	to start with if you don't yet know what you eventually want to use programming for.
-->
</p>
