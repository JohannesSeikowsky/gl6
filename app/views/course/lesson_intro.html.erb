
<div id="container">
	<h3 style="text-decoration: underline;"> Basic Programming with Python </h3>

	<div id="side_bar">
		<%= link_to "Intro", lesson_intro_path %> <br>
		<%= link_to "Programming Languages", lesson_one_path %> <br>
		<%= link_to "The fundamental Job", lesson_two_path %> <br>
		<%= link_to "Setup", lesson_three_path %> <br>
		<%= link_to "Recap", lesson_four_path %> <br>
		<%= link_to "Learning", lesson_five_path %> <br>
		<%= link_to "Hello World & in-built functions", lesson_six_path %> <br>
		<%= link_to "Strings & String functions", lesson_seven_path %> <br>
		<%= link_to "Creating Logic 1.0", lesson_eight_path %> <br>
	</div>

	<div id="lesson_content">
		<h3> Intro </h3>
		<p>
			This course is designed to make it as easy and nice as possible for anyone to go
			from little or no programming practce and understanding to a baseline level of programming practice and understanding. 
			<br> <br>
			By a baseline level I mean enough to have some confidence in one's own understanding
			and to know enough to be able to start actual work on an actual project should one wish to do so.
			In short, this course is conceived to turn any a modern computer user
			into someone who knows some programming and knows enough to use this skill to his or her advantage if required.
			<br> <br>
			The course is divided into many small lessons rather than a few large ones.
			This is for reasons of motivation, as its easier to take many small steps as very few huge ones.
			<br> <br>
			Each lesson is one "tit bit" of knowledge if you will. And throughout the course it should
			start to become clear how the concepts explained in each small lessons play tohether to
			provide you with the tools to write programmes - to design software that is.
			<br> <br>
			The majority of lessons are about Python, as Python is
			the programming language we will learn and use, but in-between I've injected lessons that explain the
			non-techincal aspects of programming and software-design, because it's of no use to
			know the technicalities of Python without knowing what to use it for, or what to do when you
			run into trouble and those "softer" aspects of the programming - although there's really nothing soft about them.
			<br> <br>
			Note - in terms of syle, I will write plainly, hopefully clearly and I also won't repeat myself. That's just to save everybody time
			and since this site wont go offline anytime soon, you can read any bit as often as you like. In fact, I believe
			one should expect to read most lessons at least twice - get a rough understanding on the first go, solidify it on the second.
			<br> <br>
			Note - since this course aims to go from zero to something, there are many things that one can learn amore about that Ive pruposefully left out. In the end I will append a list for possible further study to provide some guidance to those who want to dive deeper in any one direction.
		</p>
	</div>
</div>
